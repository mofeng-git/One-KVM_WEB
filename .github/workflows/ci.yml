name: ci 
on:
  push:
    branches:
      - master 
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run: mkdocs gh-deploy --force
      - name: Create ZIP package
        run: |
          echo "Creating ZIP package..."
          cd site
          zip -r ../docs.zip .
          cd ..
          ls -la docs.zip
      - name: Install lftp
        run: sudo apt-get update && sudo apt-get install -y lftp
      - name: Upload ZIP to FTP
        run: |
          echo "Uploading ZIP file using lftp..."
          lftp -c "
            open ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_SERVER }};
            put docs.zip;
            quit
          "
      - name: Extract files on server
        run: |
          echo "Triggering extraction on server..."
          curl -s "http://${{ secrets.WEBSITE_DOMAIN }}/extractor.php?file=docs" || echo "Extraction request sent"
      - name: Clean up ZIP file on server
        run: |
          echo "Cleaning up ZIP file on server..."
          lftp -c "
            open ftp://${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}@${{ secrets.FTP_SERVER }};
            rm docs.zip;
            quit
          " || echo "Cleanup completed"
